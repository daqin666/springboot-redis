当我们的业务超长时，运行期间，redisson会为我们自动续期锁，业务执行完将不会续期，即使不手动释放锁，锁也会默认在30s后释放。

1.看门狗机制
--redisson 中提供的续期机制
开一个监听线程，如果方法还没执行完，就帮你重置 redis 锁的过期时间。
原理：
启动定时任务重新给锁设置过期时间，默认过期时间是 30 秒，每 10 秒（看门狗默认事件的1/3）续期一次（补到 30 秒）
如果线程挂掉（注意 debug 模式也会被它当成服务器宕机），则不会续期
只有lock.lock(); 会有看门狗机制；
lock.lock(10,,TimeUnit.SECONDS)；手动设置过期时间的话，则不会有看门狗机制（推荐）


2.读写锁
一次只有一个线程可以占有写模式的读写锁, 但是可以有多个线程同时占有读模式的读写锁.（该数据加写锁、读数据加读锁）

当读写锁是写加锁状态时, 在这个锁被解锁之前, 所有试图对这个锁加锁的线程都会被阻塞.
当读写锁在读加锁状态时, 所有试图以读模式对它进行加锁的线程都可以得到访问权, 但是如果线程希望以写模式对此锁进行加锁,
它必须直到所有的线程释放锁.


3.信号量
信号量为存储在redis中的一个数字，当这个数字大于0时，即可以调用acquire()方法增加数量，也可以调用release()方法减少数量，
但是当调用release()之后小于0的话方法就会阻塞，直到数字大于0。

可以应用于秒杀、限流等操作。

4.闭锁
在要完成某些运算时，只有其它线程的运算全部运行完毕，当前运算才继续下去。